包地址：http://golang.org/pkg/crypto/elliptic/
Package elliptic implements several standard elliptic curves over prime fields.
elliptic包实现几个椭圆曲线素数域标准

func GenerateKey(curve Curve, rand io.Reader) (priv []byte, x, y *big.Int, err error)
  GenerateKey returns a public/private key pair. The private key is generated using the given reader, which must return random data.
  返回一个公有/私有 的key对。私key使用给定随机数的reader生成。
  
func Marshal(curve Curve, x, y *big.Int) []byte
  Marshal converts a point into the form specified in section 4.3.6 of ANSI X9.62.
  在第4.3.6节规定ANSI X9.62
  
func Unmarshal(curve Curve, data []byte) (x, y *big.Int)
  Unmarshal converts a point, serialized by Marshal, into an x, y pair. On error, x = nil.
  
  
type Curve
  type Curve interface {
        // Params returns the parameters for the curve.
        Params() *CurveParams
        // IsOnCurve returns true if the given (x,y) lies on the curve.
        IsOnCurve(x, y *big.Int) bool
        // Add returns the sum of (x1,y1) and (x2,y2)
        Add(x1, y1, x2, y2 *big.Int) (x, y *big.Int)
        // Double returns 2*(x,y)
        Double(x1, y1 *big.Int) (x, y *big.Int)
        // ScalarMult returns k*(Bx,By) where k is a number in big-endian form.
        ScalarMult(x1, y1 *big.Int, k []byte) (x, y *big.Int)
        // ScalarBaseMult returns k*G, where G is the base point of the group
        // and k is an integer in big-endian form.
        ScalarBaseMult(k []byte) (x, y *big.Int)
  }
  A Curve represents a short-form Weierstrass curve with a=-3. See http://www.hyperelliptic.org/EFD/g1p/auto-shortw.html
  使用a=-3代表一个短形式维尔斯特拉斯曲线
  
  func P224() Curve
    P224 returns a Curve which implements P-224 (see FIPS 186-3, section D.2.2)
    返回使用P-224实现的Curve
    
  func P256() Curve
    P256 returns a Curve which implements P-256 (see FIPS 186-3, section D.2.3)
    返回使用P-256实现的Curve
  
  func P384() Curve
    P384 returns a Curve which implements P-384 (see FIPS 186-3, section D.2.4)
    返回使用P-384实现的Curve
    
  func P521() Curve
    P521 returns a Curve which implements P-521 (see FIPS 186-3, section D.2.5)
    返回使用P-521实现的Curve
    
type CurveParams
  type CurveParams struct {
        P       *big.Int // the order of the underlying field
        N       *big.Int // the order of the base point
        B       *big.Int // the constant of the curve equation
        Gx, Gy  *big.Int // (x,y) of the base point
        BitSize int      // the size of the underlying field
  }
  CurveParams contains the parameters of an elliptic curve and also provides a generic, non-constant time implementation of Curve.
  包含一个椭圆曲线参数和提供一个通用的非恒定时间 实现Curve
  
  func (curve *CurveParams) Add(x1, y1, x2, y2 *big.Int) (*big.Int, *big.Int)
  func (curve *CurveParams) Double(x1, y1 *big.Int) (*big.Int, *big.Int)
  func (curve *CurveParams) IsOnCurve(x, y *big.Int) bool
  func (curve *CurveParams) Params() *CurveParams
  func (curve *CurveParams) ScalarBaseMult(k []byte) (*big.Int, *big.Int)
  func (curve *CurveParams) ScalarMult(Bx, By *big.Int, k []byte) (*big.Int, *big.Int)
    
Package files 包文件

elliptic.go p224.go
