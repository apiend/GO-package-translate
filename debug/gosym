包地址：http://golang.org/pkg/debug/gosym/

Package gosym implements access to the Go symbol and line number tables embedded in Go binaries generated by the gc compilers.
gosym包 使用GC编译器 在GO二进制生成  实现接收GO符号和 嵌入式的行号表

type DecodingError
  type DecodingError struct {
        // contains filtered or unexported fields
  }
  DecodingError represents an error during the decoding of the symbol table.
  表示在 解码符号表期间遇到的错误。
  
    func (e *DecodingError) Error() string
type Func
  type Func struct {
        Entry uint64
        *Sym
        End       uint64
        Params    []*Sym
        Locals    []*Sym
        FrameSize int
        LineTable *LineTable
        Obj       *Obj
  }
  A Func collects information about a single function.
  收集关于单个函数的信息。
  
type LineTable
  type LineTable struct {
        Data []byte
        PC   uint64
        Line int
  }
  
  
  func NewLineTable(data []byte, text uint64) *LineTable
    NewLineTable returns a new PC/line table corresponding to the encoded data. Text must be the start address of the corresponding text segment.
    返回一个新的 PC/line 表 相应的编码信息。Text  必须从相应的文本段地址开始。
    
  func (t *LineTable) LineToPC(line int, maxpc uint64) uint64
  func (t *LineTable) PCToLine(pc uint64) int
type Obj
  type Obj struct {
        Funcs []Func
        Paths []Sym
  }
  An Obj represents a single object file.
  表示单个文件对象
  
type Sym
  type Sym struct {
        Value  uint64
        Type   byte
        Name   string
        GoType uint64
        // If this symbol if a function symbol, the corresponding Func
        Func *Func
  }
  A Sym represents a single symbol table entry.
  代表一个符号表条目
  
  func (s *Sym) BaseName() string
    BaseName returns the symbol name without the package or receiver name.
    返回 没有包含包或者接收名字的 符号名称
    
  func (s *Sym) PackageName() string
    PackageName returns the package part of the symbol name, or the empty string if there is none.
    返回包的一部分符号名， 或者如果没有返回空字符串
    
  func (s *Sym) ReceiverName() string
    ReceiverName returns the receiver type name of this symbol, or the empty string if there is none.
    返回接收符号类型名，或者如果没有返回空
  
  func (s *Sym) Static() bool
  Static returns whether this symbol is static (not visible outside its file).
  返回符号 是否 静态
  
type Table
  type Table struct {
        Syms  []Sym
        Funcs []Func
        Files map[string]*Obj
        Objs  []Obj
  }
  Table represents a Go symbol table. It stores all of the symbols decoded from the program and provides methods to translate between symbols, names, and addresses.
  表示一个GO的符号表。存储所有的解码符号并提供一些方法 在符号、名字、地址之间转换。
  
  func NewTable(symtab []byte, pcln *LineTable) (*Table, error)
    NewTable decodes the Go symbol table in data, returning an in-memory representation.
    解码GO数据里的符号表，返回一个在内存的表示。
    
  func (t *Table) LineToPC(file string, line int) (pc uint64, fn *Func, err error)
    LineToPC looks up the first program counter on the given line in the named file. Returns UnknownPathError or UnknownLineError if there is an error looking up this line.
    在命令文件里 给定的行 第一个程序计数器。
    
  func (t *Table) LookupFunc(name string) *Func
    LookupFunc returns the text, data, or bss symbol with the given name, or nil if no such symbol is found
    从给定的名称返回 文本、数据 或者 bss符号。 或者如果符号没有发现 返回nil
    
  func (t *Table) LookupSym(name string) *Sym
    LookupSym returns the text, data, or bss symbol with the given name, or nil if no such symbol is found.
    从给定的名称返回 文本、数据 或者 bss符号。 或者如果符号没有发现 返回nil
  
  func (t *Table) PCToFunc(pc uint64) *Func
    PCToFunc returns the function containing the program counter pc, or nil if there is no such function.
    返回函数包含的 pc 程序计数器，如果没有函数返回nil
  
  func (t *Table) PCToLine(pc uint64) (file string, line int, fn *Func)
    PCToLine looks up line number information for a program counter. If there is no information, it returns fn == nil.
    查找一个程序计数器的行信息。 如果没有信息，返回 fn==nil
  
  func (t *Table) SymByAddr(addr uint64) *Sym
    SymByAddr returns the text, data, or bss symbol starting at the given address. TODO(rsc): Allow lookup by any address within the symbol.
    从给定的地址开始返回 文本、数据、或者bss 符号 。 TODO(rsc)：允许查找符号内的所有地址。
    
type UnknownFileError
  UnknownFileError represents a failure to find the specific file in the symbol table.
  代表在符号表里发现特定的错误。
  
    func (e UnknownFileError) Error() string
type UnknownLineError
  type UnknownLineError struct {
        File string
        Line int
  }
  UnknownLineError represents a failure to map a line to a program counter, either because the line is beyond the bounds of the file or because there is no code on the given line.
  表示一个程序计数器 映射一行错误。因为行超过文件界线或者因为给定的行没有代码

    func (e *UnknownLineError) Error() string
    
    
Package files

pclntab.go symtab.go
