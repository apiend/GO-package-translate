包地址：http://golang.org/pkg/encoding/ascii85/

Package ascii85 implements the ascii85 data encoding as used in the btoa tool and Adobe's PostScript and PDF document formats.
ascii85包实现 在btoa工具 和Adobe 的  PostScript 和 PDF文档中 的ascii85  数据编码

func Decode(dst, src []byte, flush bool) (ndst, nsrc int, err error)
  Decode decodes src into dst, returning both the number of bytes written to dst and the number consumed from src. If src contains invalid ascii85 data, Decode will return the number of bytes successfully written and a CorruptInputError. Decode ignores space and control characters in src. Often, ascii85-encoded data is wrapped in <~ and ~> symbols. Decode expects these to have been stripped by the caller.
  src 解码成dst，返回写入dst的字节数和src消耗的字节数。如果src包含无效的ascii85 数据，将会返回写入成功的字节数和一个CorruptInputError。Decode 忽略src空间和控制src字符。通常ascii85编码数据包裹在<~ 和 ~> 符号之间。Decode 由调用者自己
  If flush is true, Decode assumes that src represents the end of the input stream and processes it completely rather than wait for the completion of another 32-bit block.
  
  NewDecoder wraps an io.Reader interface around Decode.

func Encode(dst, src []byte) int
func MaxEncodedLen(n int) int
func NewDecoder(r io.Reader) io.Reader
func NewEncoder(w io.Writer) io.WriteCloser
type CorruptInputError
    func (e CorruptInputError) Error() string
Package files

ascii85.go
